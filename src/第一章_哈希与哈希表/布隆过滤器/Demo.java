package 第一章_哈希与哈希表.布隆过滤器;
//布隆过滤器：好处：省内存，
//          坏处：有一定失误率
// 应用在爬虫去重（多个网页爬虫避免爬取到相同的url地址）
//

/*
* 哈希 布隆过滤器 查黑名单（100数据量级，1个url 64bit） 不使用hash表来查，应为要的内存很大。要640GB，数据分片也不行
*理想的是使用布隆过滤器（一种集合，但是有失误率，不属于黑名单的url可能会被认为在黑名单中，误报）：
使用的是基本数据类型的数组
然后使用数组中的bit位
如  int 型 数据 4个字节，32bit，int [] array = new int[1000];可以表示32*1000个位置
* 例：将某个位置描黑index：
1.这个bit位来自哪个整数：intIndex = index / 32
2.这个位置是这个整数的具体哪个bit：bitIndex = index % 32
3.描黑操作（找到相应的bit位）：array[intIndex] = (array[intIndex] | (1 << bitIndex));
*
*
每个url经过k个哈希函数（相互独立的），对应相应位置上描黑，所有黑名单中每个url都描黑之后，整个布隆过滤器的数组相应位置就被描黑了
当检查url时，计算k个哈希函数的位置，当所有的位置都是黑的的情况下，就认为在过滤器中，否则就不在
* */


public class Demo {
}
